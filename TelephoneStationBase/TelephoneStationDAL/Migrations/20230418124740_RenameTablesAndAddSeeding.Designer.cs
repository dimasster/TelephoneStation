// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TelephoneStationDAL;

#nullable disable

namespace TelephoneStationDAL.Migrations
{
    [DbContext(typeof(TelephoneStationDbContext))]
    [Migration("20230418124740_RenameTablesAndAddSeeding")]
    partial class RenameTablesAndAddSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TelephoneStationDAL.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "user1",
                            Password = "password",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Login = "user2",
                            Password = "password",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Login = "user3",
                            Password = "password",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Login = "user4",
                            Password = "password",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Login = "user5",
                            Password = "password",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Login = "admin",
                            Password = "password",
                            UserId = 6
                        });
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Call", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CallStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CallTime")
                        .HasColumnType("int");

                    b.Property<int>("CallerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CallerId");

                    b.HasIndex("TargetId");

                    b.ToTable("Calls");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3881),
                            CallTime = 191,
                            CallerId = 3,
                            Status = 2,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 2,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3948),
                            CallTime = 330,
                            CallerId = 3,
                            Status = 4,
                            TargetId = 4
                        },
                        new
                        {
                            Id = 3,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3965),
                            CallTime = 209,
                            CallerId = 1,
                            Status = 4,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 4,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3979),
                            CallTime = 219,
                            CallerId = 1,
                            Status = 1,
                            TargetId = 4
                        },
                        new
                        {
                            Id = 5,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3994),
                            CallTime = 583,
                            CallerId = 3,
                            Status = 1,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 6,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4010),
                            CallTime = 580,
                            CallerId = 1,
                            Status = 3,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 7,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4025),
                            CallTime = 451,
                            CallerId = 3,
                            Status = 2,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 8,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4039),
                            CallTime = 422,
                            CallerId = 3,
                            Status = 1,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 9,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4054),
                            CallTime = 224,
                            CallerId = 4,
                            Status = 2,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 10,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4069),
                            CallTime = 567,
                            CallerId = 1,
                            Status = 4,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 11,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4117),
                            CallTime = 237,
                            CallerId = 2,
                            Status = 1,
                            TargetId = 4
                        },
                        new
                        {
                            Id = 12,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4132),
                            CallTime = 211,
                            CallerId = 1,
                            Status = 3,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 13,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4169),
                            CallTime = 543,
                            CallerId = 4,
                            Status = 2,
                            TargetId = 5
                        },
                        new
                        {
                            Id = 14,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4184),
                            CallTime = 104,
                            CallerId = 5,
                            Status = 1,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 15,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4198),
                            CallTime = 76,
                            CallerId = 3,
                            Status = 1,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 16,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4212),
                            CallTime = 129,
                            CallerId = 5,
                            Status = 0,
                            TargetId = 3
                        },
                        new
                        {
                            Id = 17,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4226),
                            CallTime = 497,
                            CallerId = 4,
                            Status = 4,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 18,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4242),
                            CallTime = 268,
                            CallerId = 2,
                            Status = 3,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 19,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4256),
                            CallTime = 185,
                            CallerId = 4,
                            Status = 4,
                            TargetId = 4
                        },
                        new
                        {
                            Id = 20,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4270),
                            CallTime = 350,
                            CallerId = 1,
                            Status = 3,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 21,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4284),
                            CallTime = 157,
                            CallerId = 3,
                            Status = 2,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 22,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4298),
                            CallTime = 162,
                            CallerId = 4,
                            Status = 4,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 23,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4311),
                            CallTime = 247,
                            CallerId = 2,
                            Status = 1,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 24,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4357),
                            CallTime = 416,
                            CallerId = 1,
                            Status = 0,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 25,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4372),
                            CallTime = 411,
                            CallerId = 5,
                            Status = 3,
                            TargetId = 5
                        },
                        new
                        {
                            Id = 26,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4386),
                            CallTime = 91,
                            CallerId = 1,
                            Status = 3,
                            TargetId = 5
                        },
                        new
                        {
                            Id = 27,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4400),
                            CallTime = 114,
                            CallerId = 3,
                            Status = 3,
                            TargetId = 1
                        },
                        new
                        {
                            Id = 28,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4414),
                            CallTime = 519,
                            CallerId = 4,
                            Status = 1,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 29,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4427),
                            CallTime = 480,
                            CallerId = 1,
                            Status = 0,
                            TargetId = 2
                        },
                        new
                        {
                            Id = 30,
                            CallStartDate = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4441),
                            CallTime = 351,
                            CallerId = 4,
                            Status = 3,
                            TargetId = 1
                        });
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBought")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ReceiptType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Receiptes");

                    b.HasDiscriminator<string>("ReceiptType").HasValue("Receipt");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.SavedUser", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "TargetId");

                    b.HasIndex("TargetId");

                    b.ToTable("SavedUsers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            TargetId = 2
                        },
                        new
                        {
                            UserId = 1,
                            TargetId = 3
                        },
                        new
                        {
                            UserId = 2,
                            TargetId = 1
                        },
                        new
                        {
                            UserId = 3,
                            TargetId = 2
                        },
                        new
                        {
                            UserId = 4,
                            TargetId = 1
                        });
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostPerMinute")
                        .HasColumnType("money");

                    b.Property<int>("FreeMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("SubscriptionCost")
                        .HasColumnType("money");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CostPerMinute = 0.1m,
                            FreeMinutes = 0,
                            SubscriptionCost = 9.99m,
                            Title = "Service 1"
                        },
                        new
                        {
                            Id = 2,
                            CostPerMinute = 0.05m,
                            FreeMinutes = 10,
                            SubscriptionCost = 14.99m,
                            Title = "Service 2"
                        },
                        new
                        {
                            Id = 3,
                            CostPerMinute = 0.2m,
                            FreeMinutes = 10,
                            SubscriptionCost = 19.99m,
                            Title = "Service 3"
                        },
                        new
                        {
                            Id = 4,
                            CostPerMinute = 0.15m,
                            FreeMinutes = 20,
                            SubscriptionCost = 24.99m,
                            Title = "Service 4"
                        },
                        new
                        {
                            Id = 5,
                            CostPerMinute = 0.25m,
                            FreeMinutes = 20,
                            SubscriptionCost = 29.99m,
                            Title = "Service 5"
                        },
                        new
                        {
                            Id = 6,
                            CostPerMinute = 0.2m,
                            FreeMinutes = 30,
                            SubscriptionCost = 39.99m,
                            Title = "Service 6"
                        });
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Subscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MinuteOfUsage")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SubscriptionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SubscriptionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MinuteOfUsage = 386,
                            ServiceId = 1,
                            SubscriptionEndDate = new DateTime(2023, 5, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4467),
                            SubscriptionStartDate = new DateTime(2023, 4, 7, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4465),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            MinuteOfUsage = 527,
                            ServiceId = 2,
                            SubscriptionEndDate = new DateTime(2023, 5, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4498),
                            SubscriptionStartDate = new DateTime(2023, 3, 30, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4496),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            MinuteOfUsage = 185,
                            ServiceId = 3,
                            SubscriptionEndDate = new DateTime(2023, 5, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4519),
                            SubscriptionStartDate = new DateTime(2023, 4, 6, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4517),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            MinuteOfUsage = 199,
                            ServiceId = 4,
                            SubscriptionEndDate = new DateTime(2023, 5, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4539),
                            SubscriptionStartDate = new DateTime(2023, 4, 15, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4537),
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            MinuteOfUsage = 345,
                            ServiceId = 5,
                            SubscriptionEndDate = new DateTime(2023, 5, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4558),
                            SubscriptionStartDate = new DateTime(2023, 4, 7, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4557),
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            MinuteOfUsage = 488,
                            ServiceId = 6,
                            SubscriptionEndDate = new DateTime(2023, 5, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4579),
                            SubscriptionStartDate = new DateTime(2023, 4, 6, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4578),
                            UserId = 6
                        });
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Ballance")
                        .HasColumnType("float");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ballance = 0.0,
                            IsBanned = false,
                            Name = "John",
                            PhoneNumber = 123456789,
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            Ballance = 0.0,
                            IsBanned = false,
                            LastName = "Smith",
                            Name = "Sarah",
                            PhoneNumber = 234567890,
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            Ballance = 0.0,
                            IsBanned = false,
                            Name = "Alex",
                            PhoneNumber = 345678901,
                            Role = 1
                        },
                        new
                        {
                            Id = 4,
                            Ballance = 0.0,
                            IsBanned = false,
                            Name = "Mike",
                            PhoneNumber = 456789012,
                            Role = 1
                        },
                        new
                        {
                            Id = 5,
                            Ballance = 0.0,
                            IsBanned = false,
                            Name = "Emily",
                            PhoneNumber = 567890123,
                            Role = 1
                        },
                        new
                        {
                            Id = 6,
                            Ballance = 0.0,
                            IsBanned = false,
                            Name = "Admin",
                            PhoneNumber = 678901234,
                            Role = 2
                        });
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.CallReceipt", b =>
                {
                    b.HasBaseType("TelephoneStationDAL.Entities.Receipt");

                    b.Property<int>("CallId")
                        .HasColumnType("int");

                    b.HasIndex("CallId")
                        .IsUnique()
                        .HasFilter("[CallId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("CallReceipt");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3933),
                            IsBought = true,
                            Price = 1.57975460689327m,
                            UserId = 3,
                            CallId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3956),
                            IsBought = true,
                            Price = 0.365064297957425m,
                            UserId = 3,
                            CallId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3971),
                            IsBought = false,
                            Price = 2.56224327671058m,
                            UserId = 1,
                            CallId = 3
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(3986),
                            IsBought = true,
                            Price = 1.53678529012912m,
                            UserId = 1,
                            CallId = 4
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4002),
                            IsBought = false,
                            Price = 3.31791636264993m,
                            UserId = 3,
                            CallId = 5
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4017),
                            IsBought = false,
                            Price = 3.3850904407395m,
                            UserId = 1,
                            CallId = 6
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4032),
                            IsBought = true,
                            Price = 2.04072152985089m,
                            UserId = 3,
                            CallId = 7
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4046),
                            IsBought = false,
                            Price = 0.146067292706979m,
                            UserId = 3,
                            CallId = 8
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4061),
                            IsBought = false,
                            Price = 3.36130622716839m,
                            UserId = 4,
                            CallId = 9
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4108),
                            IsBought = false,
                            Price = 4.88825540103062m,
                            UserId = 1,
                            CallId = 10
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4124),
                            IsBought = true,
                            Price = 4.34781329255758m,
                            UserId = 2,
                            CallId = 11
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4139),
                            IsBought = false,
                            Price = 3.10180924988691m,
                            UserId = 1,
                            CallId = 12
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4176),
                            IsBought = false,
                            Price = 4.44519293077237m,
                            UserId = 4,
                            CallId = 13
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4191),
                            IsBought = true,
                            Price = 0.610268963115974m,
                            UserId = 5,
                            CallId = 14
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4205),
                            IsBought = false,
                            Price = 1.29788966272998m,
                            UserId = 3,
                            CallId = 15
                        },
                        new
                        {
                            Id = 16,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4219),
                            IsBought = false,
                            Price = 3.40586159639986m,
                            UserId = 5,
                            CallId = 16
                        },
                        new
                        {
                            Id = 17,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4234),
                            IsBought = false,
                            Price = 4.376941610318m,
                            UserId = 4,
                            CallId = 17
                        },
                        new
                        {
                            Id = 18,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4249),
                            IsBought = true,
                            Price = 0.0400632481521951m,
                            UserId = 2,
                            CallId = 18
                        },
                        new
                        {
                            Id = 19,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4262),
                            IsBought = true,
                            Price = 0.871181149068541m,
                            UserId = 4,
                            CallId = 19
                        },
                        new
                        {
                            Id = 20,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4276),
                            IsBought = true,
                            Price = 0.0361076648135544m,
                            UserId = 1,
                            CallId = 20
                        },
                        new
                        {
                            Id = 21,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4290),
                            IsBought = true,
                            Price = 3.42753177319915m,
                            UserId = 3,
                            CallId = 21
                        },
                        new
                        {
                            Id = 22,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4304),
                            IsBought = true,
                            Price = 0.0830441775564616m,
                            UserId = 4,
                            CallId = 22
                        },
                        new
                        {
                            Id = 23,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4349),
                            IsBought = false,
                            Price = 2.36635480168276m,
                            UserId = 2,
                            CallId = 23
                        },
                        new
                        {
                            Id = 24,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4364),
                            IsBought = false,
                            Price = 1.75389224904493m,
                            UserId = 1,
                            CallId = 24
                        },
                        new
                        {
                            Id = 25,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4378),
                            IsBought = true,
                            Price = 4.83882328435891m,
                            UserId = 5,
                            CallId = 25
                        },
                        new
                        {
                            Id = 26,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4392),
                            IsBought = false,
                            Price = 0.936151984172547m,
                            UserId = 1,
                            CallId = 26
                        },
                        new
                        {
                            Id = 27,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4406),
                            IsBought = false,
                            Price = 1.22813040232466m,
                            UserId = 3,
                            CallId = 27
                        },
                        new
                        {
                            Id = 28,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4420),
                            IsBought = false,
                            Price = 0.974465256231774m,
                            UserId = 4,
                            CallId = 28
                        },
                        new
                        {
                            Id = 29,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4434),
                            IsBought = false,
                            Price = 0.0726381729581388m,
                            UserId = 1,
                            CallId = 29
                        },
                        new
                        {
                            Id = 30,
                            Date = new DateTime(2023, 4, 18, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4448),
                            IsBought = true,
                            Price = 1.13592010048533m,
                            UserId = 4,
                            CallId = 30
                        });
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.SubscriptionReceipt", b =>
                {
                    b.HasBaseType("TelephoneStationDAL.Entities.Receipt");

                    b.Property<int>("SubscriptionId")
                        .HasColumnType("int");

                    b.HasIndex("SubscriptionId")
                        .IsUnique()
                        .HasFilter("[SubscriptionId] IS NOT NULL");

                    b.HasDiscriminator().HasValue("SubscriptionReceipt");

                    b.HasData(
                        new
                        {
                            Id = 31,
                            Date = new DateTime(2023, 3, 27, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4482),
                            IsBought = true,
                            Price = 596m,
                            UserId = 1,
                            SubscriptionId = 1
                        },
                        new
                        {
                            Id = 32,
                            Date = new DateTime(2023, 3, 29, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4507),
                            IsBought = false,
                            Price = 290m,
                            UserId = 2,
                            SubscriptionId = 2
                        },
                        new
                        {
                            Id = 33,
                            Date = new DateTime(2023, 3, 31, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4527),
                            IsBought = false,
                            Price = 951m,
                            UserId = 3,
                            SubscriptionId = 3
                        },
                        new
                        {
                            Id = 34,
                            Date = new DateTime(2023, 3, 22, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4547),
                            IsBought = true,
                            Price = 466m,
                            UserId = 4,
                            SubscriptionId = 4
                        },
                        new
                        {
                            Id = 35,
                            Date = new DateTime(2023, 4, 7, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4567),
                            IsBought = true,
                            Price = 222m,
                            UserId = 5,
                            SubscriptionId = 5
                        },
                        new
                        {
                            Id = 36,
                            Date = new DateTime(2023, 3, 21, 15, 47, 40, 428, DateTimeKind.Local).AddTicks(4619),
                            IsBought = true,
                            Price = 666m,
                            UserId = 6,
                            SubscriptionId = 6
                        });
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Account", b =>
                {
                    b.HasOne("TelephoneStationDAL.Entities.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("TelephoneStationDAL.Entities.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Call", b =>
                {
                    b.HasOne("TelephoneStationDAL.Entities.User", "Caller")
                        .WithMany("Calls")
                        .HasForeignKey("CallerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TelephoneStationDAL.Entities.User", "Target")
                        .WithMany("Callers")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Caller");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Receipt", b =>
                {
                    b.HasOne("TelephoneStationDAL.Entities.User", "User")
                        .WithMany("Receipts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.SavedUser", b =>
                {
                    b.HasOne("TelephoneStationDAL.Entities.User", "Target")
                        .WithMany("Contacters")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("TelephoneStationDAL.Entities.User", "User")
                        .WithMany("Contacts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Subscription", b =>
                {
                    b.HasOne("TelephoneStationDAL.Entities.Service", "Service")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TelephoneStationDAL.Entities.User", "User")
                        .WithOne("Subscription")
                        .HasForeignKey("TelephoneStationDAL.Entities.Subscription", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.CallReceipt", b =>
                {
                    b.HasOne("TelephoneStationDAL.Entities.Call", "Call")
                        .WithOne("Receipt")
                        .HasForeignKey("TelephoneStationDAL.Entities.CallReceipt", "CallId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Call");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.SubscriptionReceipt", b =>
                {
                    b.HasOne("TelephoneStationDAL.Entities.Subscription", "Subscription")
                        .WithOne("Receipt")
                        .HasForeignKey("TelephoneStationDAL.Entities.SubscriptionReceipt", "SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Call", b =>
                {
                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Service", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.Subscription", b =>
                {
                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("TelephoneStationDAL.Entities.User", b =>
                {
                    b.Navigation("Account");

                    b.Navigation("Callers");

                    b.Navigation("Calls");

                    b.Navigation("Contacters");

                    b.Navigation("Contacts");

                    b.Navigation("Receipts");

                    b.Navigation("Subscription");
                });
#pragma warning restore 612, 618
        }
    }
}
